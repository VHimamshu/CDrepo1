pipeline {
    agent any

    tools {
        maven 'maven'
    }

    environment {
        DATE = "${new Date().format('yyyy-MM-dd_HHmm', TimeZone.getTimeZone('IST'))}"
        IMAGE_NAME = "himamshu5904/ciproject2"
    }

    stages {

        stage('SAST') {
            steps {
                sh "mvn clean verify sonar:sonar -Dsonar.projectKey=mavenInt  -Dsonar.projectName='mavenInt  -Dsonar.host.url=http://34.93.170.203/sonar                     -Dsonar.token=sqp_02df09424bc6e704f57d6ed9b98d75b5c43f0742"
            }
        }

        stage('SCA') {
            steps {
                sh '''
                trivy fs  --format template --template "@html.tpl" -o report-sca.html .
                '''
            }
        }
        stage('Publish Trivy SCA Report') {
            steps {
                publishHTML([
                    reportDir: '.',
                    reportFiles: 'report-sca.html',
                    reportName: 'Trivy SCA Vulnerability Report',
                    reportTitles: 'Trivy HTML Report',
                    keepAll: true,
                    alwaysLinkToLastBuild: true,
                    allowMissing: false
                ])
            }
        }

        stage('Unit Tests') {
            steps {
                sh "mvn clean test"
            }
        }

        stage('Publish Test Results') {
            steps {
                junit 'target/surefire-reports/*.xml'
            }
        }

        stage('Package') {
            steps {
                sh "mvn clean package"
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                echo "Building Docker image with tag: $DATE"
                ls -ltrh
                docker build -t $IMAGE_NAME:$DATE .
                '''
            }
        }

        stage('Push Docker Image') {
            steps {
                sh '''
                echo "Pushing Docker image: $IMAGE_NAME:$DATE"
                echo "Amma@1234" | docker login -u himamshu5904 --password-stdin
                docker push $IMAGE_NAME:$DATE
                '''
            }
        }
        stage('Trivy SCA Scan') {
            steps {
                sh '''
                trivy config --format template --template "@html.tpl" -o report-iac.html .
                '''
            }
        }

        stage('Publish Trivy IAC Report') {
            steps {
                publishHTML([
                    reportDir: '.',
                    reportFiles: 'report-iac.html',
                    reportName: 'Trivy SCA Vulnerability Report',
                    reportTitles: 'Trivy HTML Report',
                    keepAll: true,
                    alwaysLinkToLastBuild: true,
                    allowMissing: false
                ])
            }
        }

        stage('Trivy Image Scan') {
            steps {
                sh '''
                trivy image --format template --template "@html.tpl" -o report-docker.html $IMAGE_NAME:$DATE
                '''
            }
        }

        stage('Publish Trivy Image Scan Report') {
            steps {
                publishHTML([
                    reportDir: '.',
                    reportFiles: 'report-docker.html',
                    reportName: 'Trivy Image Vulnerability Report',
                    reportTitles: 'Trivy HTML Report',
                    keepAll: true,
                    alwaysLinkToLastBuild: true,
                    allowMissing: false
                ])
            }
        }
    }
}
