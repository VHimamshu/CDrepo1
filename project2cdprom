pipeline {
    agent { label 'Jenkins1' }

    tools {
        maven 'maven'
    }

    environment {
        environment {
        JAR_NAME     = "java-kubernetes-1.1.2.jar"
        TARGET_DIR   = "/opt/myapp"
        SERVICE_NAME = "myapp"
        BACKUP_DATE  = "${new Date().format('yyyy-MM-dd_HHmm', TimeZone.getTimeZone('IST'))}"
    }

    stages {
        
        stage('Unit Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Publish Results') {
            steps {
                junit 'target/surefire-reports/*.xml'
            }
        }

        stage('Package the Code') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Upload to Artifact') {
            steps {
                sh 'mvn clean deploy -s settings.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                    ls -ltrh
                    echo "Building docker image with tag: $Num"
                    docker build -t $IMAGE_NAME:$DATE .
                '''
            }
        }

        stage('Push Docker Image to AR') {
            steps {
                sh '''
                    echo "Pushing docker image: $IMAGE_NAME:$Num"
                    echo 'Amma@1234' | docker login -u himamshu5904 --password-stdin
                    docker push $IMAGE_NAME:$DATE
            }
        }

         stage('Download Artifact') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'Him_Nexus', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh '''
                        set -e

                        echo "==> Checking if old JAR exists for backup"
                        if sudo test -f "$TARGET_DIR/$JAR_NAME"; then
                            echo "==> Backing up existing JAR"
                            sudo mv "$TARGET_DIR/$JAR_NAME" "$TARGET_DIR/${JAR_NAME%.jar}_$BACKUP_DATE.jar"
                        fi

                        echo "==> Downloading new JAR from Nexus"
                        curl -u $USERNAME:$PASSWORD "http://34.93.142.175:8081/repository/mvnpipe2promrelease/com/example/java-kubernetes/1.1.2/$JAR_NAME" --output $JAR_NAME
                    '''
                }
            }

        }
         stage('Deploy App') {
          steps {
            sh '''
              set -e
              echo "==> Creating target directory if it doesn't exist"
              sudo mkdir -p $TARGET_DIR

              echo "==> Copying new JAR to $TARGET_DIR"
              sudo cp $JAR_NAME $TARGET_DIR/

              echo "==> Updating ownership"
              sudo chown jenkins:jenkins $TARGET_DIR/$JAR_NAME

              echo "==> Restarting systemd service: $SERVICE_NAME"
              sudo systemctl daemon-reload
              sudo systemctl restart $SERVICE_NAME

              echo "==> Verifying service status"
              sudo systemctl status $SERVICE_NAME --no-pager

                '''
            }
        }
    }
}
